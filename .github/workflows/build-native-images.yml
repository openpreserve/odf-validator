name: "Native Images"
# author: Carl Wilson <carl_AT_openpreservation.org>

on:
  workflow_call:
    inputs:
      release_version:
        description: "Release version"
        required: true
        type: string
      release_tag:
        description: "Release tag"
        required: true
        type: string
      pom_version:
        description: "POM version"
        required: true
        type: string
jobs:
  build:
    name: "Build and Publish Native Images"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: 'ubuntu-latest'
            label: 'linux'
            executable: 'odf-apps/target/odf-apps'
          - os: 'macos-latest'
            label: 'mac'
            executable: 'odf-apps/target/odf-apps'
          - os: 'windows-latest'
            label: 'windows.exe'
            executable: 'odf-apps/target/odf-apps.exe'
    runs-on: ${{matrix.os}}
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4

    - name: 'Setup GraalVM Environment'
      uses: graalvm/setup-graalvm@v1
      with:
        distribution: 'graalvm'
        java-version: '17'
        components: 'native-image'

    - name: 'Get JAR Artifact'
      uses: actions/download-artifact@v4
      id: get_jar_artifact
      with:
        name: 'odf-validator-${{ inputs.release_version }}-all.jar'

    - name: 'Build Native Image'
      run: |
        mvn -Pnative package
        # native-image --no-fallback \
        # -H:ResourceConfigurationFiles=native-image/config/resource-config.json \
        # -H:ReflectionConfigurationFiles=native-image/config/reflect-config.json \
        # -H:JNIConfigurationFiles=native-image/config/jni-config.json \
        # -H:Class=org.openpreservation.odf.apps.CliValidator \
        # -jar odf-apps-${{ inputs.pom_version }}-jar-with-dependencies.jar \
        # -H:Name=odf-validator-${{ inputs.release_version }}-all

    - name: 'Publish Native Image'
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: 'odf-validator-${{ inputs.release_version }}-${{ matrix.label }}'
        path: '${{ matrix.executable }}'

    - name: "Upload release binaries"
      if: success()
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: "${{ matrix.executable }}"
        asset_name: "odf-validator-${{ inputs.release_version }}-${{matrix.label}}"
        tag: "${{ inputs.release_tag }}"
        overwrite: true
        draft: false
        prerelease: false
